service: restaurantMicroservices
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  endpointType: EDGE
  deploymentBucket:
    name: danimaxrestaurantlambda
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*/*/*

functions:
  kitchenOrders:
    handler: dist/index.ordersHandler
    environment:
      WAREHOUSE_QUEUE_URL: ${construct:warehouse.queueUrl}
    events:
      - http:
          path: v1/orders
          method: post
  kitchenReProcessOrder:
    handler: dist/index.reProcessOrderHandler
    environment:
      WAREHOUSE_QUEUE_URL: ${construct:warehouse.queueUrl}
    events:
      - http:
          path: v1/re_process_order
          method: post
  kitchenListOrders:  
    handler: dist/index.listOrdersHandler
    events:
      - http:
          path: v1/orders
          method: get
  kitchenListCurrentOrders:  
    handler: dist/index.listCurrentOrdersHandler
    events:
      - http:
          path: v1/orders/current
          method: get

constructs:
  kitchenCook:
      type: queue
      worker:
          handler: dist/index.cookOrderHandler
  warehouse:
      type: queue
      worker:
          handler: dist/index.getIngredientsHandler

plugins:
  - serverless-offline
  - serverless-deployment-bucket
  - serverless-jest-plugin
  - serverless-lift

custom:
  jest:
    verbose: true
    collectCoverage: true 
  deploymentBucket:
    versioning: true
    accelerate: true
    blockPublicAccess: true
    tags:
      - Key: Environment
        Value: production
  ncc:
    concurrency: 3 # Quantity of files being compiled at the same time
    excludeDependencies: false # Exclude all the dependencies of package.json
    minify: true # @vercel/ncc option
    sourceMap: false # @vercel/ncc option
    sourceMapRegister: true # @vercel/ncc option

package:
  exclude:
    - node_modules/**
